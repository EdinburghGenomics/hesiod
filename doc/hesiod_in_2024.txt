It's January 2024. Where are we?

Hesiod really needs updating to work with POD5 files (and latest MinKNOW).

Hesiod can't get project names from the LIMS any more (as Clarity is dead).

Hesiod in production has gained the power of visitor delivery and some fixes.

Hesiod in dev branch (pod5_no_calref) is ready to test on a POD5 run - say:

/lustre-gseg/promethion/prom_runs/2023/20231107_MIN2_26171SS/26171SS0001L02/20231108_1411_MN32284_AOZ898_35873099

And then I can upgrade everything and it will be great (and probably break again).

So, the plan is:

1) Make a new branch fast5_v_2x which will be the legacy Hesiod 2

DONE

2) Merge pod5_no_calref into master and resolve the conflicts

test/test_driver.py
(and test/test_driver_base.py)
driver.sh
Snakefile.rundata
Snakefile.blob

DONE

3) Fix project_realnames_from_rt.py and make sure it works (support -t flag) and is called by
the driver.

Nearly done. Maybe I'll need to re-replace it with "project_realnames_from_ragic.py" but that's fine,
whatever.

4) Test on the run above (and maybe some other POD5 run?) - 20230907_EGS2_25360EG

Seems I'm ready for this on 16th Jan. Let's go...

5) Test that we can deliver the POD5 data

    a) The actual files and md5 sums
    b) The Information.txt file is correct

6) Deploy the new Hesiod and new qc_tools_python

7) Upgrade both the systems. Are we doing a base system upgrade on the DAU?

8) Remember you also need to test the ONT data sync script, and if we are to use it work out how it's
going to work with our renaming scheme. I guess probably just have the sync going to another directory
and make that the upstream, then the "sync" is just going to be a symlink. A bit silly but it will
at least work without major re-plumbing.

https://community.nanoporetech.com/docs/prepare/library_prep_protocols/promethion-user-manual/v/pic_1013_v1_revv_12nov2019/data-management
