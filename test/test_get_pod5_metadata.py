#!/usr/bin/env python3

"""Check reading the metadata from a POD5 file"""

# The test file, PAK00002_fail_barcode07_b7f7032d_0.pod5.gz, is a combined POD5 file
# generated by pod5-convert-fast5 from the original FAST5. Once I have a native POD5
# file I should add this to the test suite.

import sys, os, re
import unittest
import logging
from collections import OrderedDict

DATA_DIR = os.path.abspath(os.path.dirname(__file__) + '/examples')
VERBOSE = os.environ.get('VERBOSE', '0') != '0'

from get_pod5_metadata import md_from_pod5_file

class T(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        #Prevent the logger from printing messages - I like my tests to look pretty.
        if VERBOSE:
            logging.getLogger().setLevel(logging.DEBUG)
        else:
            logging.getLogger().setLevel(logging.CRITICAL)

    def setUp(self):
        # See the errors in all their glory
        self.maxDiff = None

    ### THE TESTS ###
    def test_converted_pod5(self):
        """Try my test file. It's zipped, but the function will unzip it automatically.
        """
        md = md_from_pod5_file(DATA_DIR + '/PAK00002_fail_barcode07_b7f7032d_0.pod5.gz')

        # This is identical to the FAST5 aside from the file version tag.
        expected = dict( POD5Version    = '0.0.15',
                         StartTime      = 'Tuesday, 01 Mar 2022 15:38:47',
                         GuppyVersion   = '5.1.13+b292f4d',
                         RunID          = 'b7f7032d28779ac6666af1b4fd724bf2ec41ec25',
                         ExperimentType = 'genomic_dna',
                         SequencingKit  = 'sqk-lsk109',
                         BasecallConfig = 'dna_r9.4.1_450bps_hac_prom.cfg' )

        self.assertEqual(md, expected)

if __name__ == '__main__':
    unittest.main()
