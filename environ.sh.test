# Config parameters for Hesiod
STALL_TIME=''

# We may have multiple UPSTREAM locations, ie. instruments. In which case you could set
# UPSTREAM="EGS1 EGS2 LOANER1". But for now just one box.
UPSTREAM="EGS1"
UPSTREAM_EGS1=prom@promethion:/data

# Or for local testing, just this:
UPSTREAM=""

PROM_RUNS=~/test_promethion/prom_runs
FASTQDATA=~/test_promethion/prom_fastqdata

# Limit runs in scope if needed
RUN_NAME_REGEX='.+_.+_.+'

# For testing, bypass RT and use the global partition on SLURM
RT_SYSTEM=none
CLUSTER_QUEUE=global

# Log to the terminal
MAINLOG=/dev/stdout

# Provide a sync command as a template that may access:
#   {upstream}      - The full path as per column 2 of the remote info
#   {upstream_host} - eg prom@promethion
#   {upstream_path} - eg /data/testrun
#   {cell}          - col 3 - eg. testlib/20190710_1723_2-A5-D5_PAD38578_c6ded78b
#   {run}           - col 1 - eg. 20190710_TEST_testrun
SYNC_CMD="rsync -vrlptDR \${upstream}/./\${cell} ${PROM_RUNS}/\${run}/"

## Or for speedier copying via CIFS:
# SYNC_CMD="ssh \${upstream_host} rsync -vrlptDR \${upstream_path}/./\${cell} /mnt/lustre/prometion/prom_runs/\${run}/"

## Or for super-fast lustre-to-lustre testing with the hard-link hack:
# SYNC_CMD="rsync -vrlptR --link-dest=\${upstream}/ \${upstream}/./\${cell} ${PROM_RUNS}/\${run}/"

# If you want different sync commands for different upstream hosts then this is not yet supported.
# I'm imagining if we get another Promethion we'll just set it up the same.

# Reports reports reports
REPORT_DESTINATION=web1.genepool.private:/var/runinfo/hesiod_reports/test
REPORT_LINK=http://web1.genepool.private/runinfo/hesiod_reports/test

# Or
REPORT_DESTINATION=localhost:"$(readlink -f $PROM_RUNS)"/hesiod_reports
